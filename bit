#!/bin/sh

USERCOMMAND="$1"

SYNCCOMMAND="rsync -ru --delete --progress"
RCONCOMMAND="echo This is not supposed to happen "

BITDIR=".bit"
BITSTORAGE="$BITDIR/files"
CONFIGFILE="$BITDIR/config"

if [ "$USERCOMMAND" = "init" ]; then
	wait
else
	if [ -f $CONFIGFILE ]; then 
		. "$CONFIGFILE"
		CURRENTDIR="$(pwd)"
	else
		echo "Configuration file not found."
		exit
	fi
fi

init() {
	if [ -z "$1" ]; then
		mkdir -p "$BITDIR" "$BITSTORAGE"
		echo "$BITDIR/" >> .gitignore
		echo "BITREMOTEORIGIN=" >> "$BITDIR/config"
	else
		echo "Command $1 not recognised."
	fi
}

add() {
	FILE="$1"
	if [ -z "$FILE" ]; then
		echo "No file provided"
	else if [ -f "$FILE" ]; then
		echo "Adding $FILE"
		mv "$FILE" "$BITSTORAGE/$FILE"
		ln -s "$BITSTORAGE/$FILE" "$FILE"
	else
		echo "File not found"
	fi
	fi

}

remove() {
	FILE="$1"
	if [ -z "$FILE" ]; then
		echo "No file provided"
	else if [ -f "$FILE" ]; then
		LINKEDFILE="$(readlink -f "$FILE")"
		if [ -f "$LINKEDFILE" ]; then
			echo "Removing $FILE"
			rm "$FILE" "$LINKEDFILE"
		else
			echo "$FILE not found in $BITSTORAGE"
		fi
	else
		echo "File not found"
	fi
	fi
}

clean() {
	NORMALFILES="$(find . -mindepth 1 | cut -d "/" -f2- | grep -v "^.git\|^.bit")"
	BITFILES="$(find .bit/ -mindepth 2 | cut -d "/" -f3-)"
	ERRANT=""
	bitLoopPipe=$(mktemp -u)
	mkfifo "$bitLoopPipe"
	echo "$BITFILES" > "$bitLoopPipe" &
	while read file; do
	exists=""
		normalLoopPipe=$(mktemp -u)
		mkfifo "$normalLoopPipe"
		echo "$NORMALFILES" > "$normalLoopPipe" &
		while read nfile; do
			[ "$nfile" = "$file" ] && exists="true"
		done < "$normalLoopPipe"
	[ -z "$exists" ] && ERRANT="$ERRANT$file\n"
	done < "$bitLoopPipe"
	if [ -n "$ERRANT" ]; then
		echo "Unreferenced files found:"
		printf "$ERRANT"
		read -p "Delete? Y/n: " response
		if [ "$response" = "" ] || [ "$response" = "y" ] || [ "$response" = "yes" ]; then
			printf "$ERRANT" | while read file; do
				echo "Removing $file"
				rm "$BITSTORAGE/$file"
				echo "$file" >> "$BITDIR/delete"
			done
		fi
	else
		echo "No unreferenced files found."
	fi
}

pull() {
	echo "Syncing bit storage..."
	[ -z "$BITREMOTEORIGIN" ] && echo "No remote found in $CONFIGFILE"
	$SYNCCOMMAND "$BITREMOTEORIGIN" "$BITSTORAGE"
}

push() {
	echo "Pushing bit storage..."
	[ -z "$BITREMOTEORIGIN" ] && echo "No remote found in $CONFIGFILE"
	$SYNCCOMMAND "$BITSTORAGE/" "$BITREMOTEORIGIN" 
}

if [ "$USERCOMMAND" = "init" ]; then
	init "$2"
else if [ "$USERCOMMAND" = "add" ]; then
	add "$2"
else if [ "$USERCOMMAND" = "rm" ]; then
	remove "$2"
else if [ "$USERCOMMAND" = "clean" ]; then
	clean
else if [ "$USERCOMMAND" = "pull" ]; then
	pull
else if [ "$USERCOMMAND" = "push" ]; then
	push
fi
fi
fi
fi
fi
fi
